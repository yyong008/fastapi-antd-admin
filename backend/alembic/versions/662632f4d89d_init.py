"""init

Revision ID: 662632f4d89d
Revises: 
Create Date: 2024-10-09 16:12:29.764201

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '662632f4d89d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sys_config',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='参数名称'),
    sa.Column('key', sa.String(length=255), nullable=False, comment='参数名字'),
    sa.Column('value', sa.Text(), nullable=False, comment='参数键值'),
    sa.Column('description', sa.Text(), nullable=True, comment='描述'),
    sa.Column('remark', sa.Text(), nullable=True, comment='备注'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('blog', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('blog', 'content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('blog', 'author',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('blog', 'source',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('blog', 'publishedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.drop_constraint('blog_tag_id_fkey', 'blog', type_='foreignkey')
    op.drop_constraint('blog_category_id_fkey', 'blog', type_='foreignkey')
    op.create_foreign_key(None, 'blog', 'blog_category', ['category_id'], ['id'])
    op.create_foreign_key(None, 'blog', 'blog_tag', ['tag_id'], ['id'])
    op.alter_column('blog_category', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('blog_category', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('blog_category_name_key', table_name='blog_category')
    op.create_unique_constraint(None, 'blog_category', ['name'])
    op.alter_column('blog_tag', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('blog_tag', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('blog_tag_name_key', table_name='blog_tag')
    op.create_unique_constraint(None, 'blog_tag', ['name'])
    op.alter_column('change_log', 'publish_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('change_log', 'publish_version',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('change_log', 'publish_time',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('change_log', 'content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('change_log', 'url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('change_log', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('change_log', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('feed_back', 'content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('feed_back', 'url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('feed_back', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('feed_back', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('mail', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'host',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'user',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'pass',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'from',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'to',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'subject',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'html',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mail', 'text',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('news', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('news', 'content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('news', 'author',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('news', 'source',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('news', 'publishedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.drop_constraint('news_news_id_fkey', 'news', type_='foreignkey')
    op.create_foreign_key(None, 'news', 'news_category', ['news_id'], ['id'])
    op.alter_column('news_category', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('news_category', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('news_category_name_key', table_name='news_category')
    op.create_unique_constraint(None, 'news_category', ['name'])
    op.alter_column('profile_link', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('profile_link', 'url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('profile_link', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('profile_link_category', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('profile_link_category', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_department', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_department', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_department', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_department', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_constraint('sys_department_parent_department_id_fkey', 'sys_department', type_='foreignkey')
    op.create_foreign_key(None, 'sys_department', 'sys_department', ['parent_department_id'], ['id'], ondelete='SET NULL')
    op.alter_column('sys_dictionary', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_dictionary', 'code',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_dictionary', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_dictionary', 'remark',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_dictionary', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_dictionary', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('sys_dictionary_entry', 'key',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_dictionary_entry', 'value',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_dictionary_entry', 'remark',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_dictionary_entry', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_dictionary_entry', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('sys_loginlog', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_loginlog', 'ip',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_loginlog', 'address',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_loginlog', 'login_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_loginlog', 'system',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_loginlog', 'browser',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_menu', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'remark',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'icon',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'path',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'path_file',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'permission',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_menu', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('sys_menu_role', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('sys_menu_role', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('sys_menu_role', 'updatedAt')
    op.drop_column('sys_menu_role', 'createdAt')
    op.alter_column('sys_role', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_role', 'value',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_role', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_role', 'remark',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_role', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_role', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('sys_user', 'avatar',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_user', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_user', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_user', 'nickname',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_user', 'password',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('sys_user', 'lang',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("'en-US'::text"))
    op.alter_column('sys_user', 'theme',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("'light'::text"))
    op.alter_column('sys_user', 'phone',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_user', 'remark',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sys_user', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_user', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('sys_user_role', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('sys_user_role', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('sys_user_role', 'updatedAt')
    op.drop_column('sys_user_role', 'createdAt')
    op.alter_column('tools_storage', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tools_storage', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('tools_storage', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'file_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'ext_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'path',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'size',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.add_column('user_sign', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_column('user_sign', 'userId')
    op.alter_column('user_sign_log', 'sign_time',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('user_sign_log', 'createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_sign_log', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_sign_log', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('user_sign_log', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_sign_log', 'sign_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False)
    op.add_column('user_sign', sa.Column('userId', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('user_sign', 'user_id')
    op.alter_column('tools_storage', 'type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'size',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'path',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'ext_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'file_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('tools_storage', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('tools_storage', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.add_column('sys_user_role', sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
    op.add_column('sys_user_role', sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True))
    op.drop_column('sys_user_role', 'updated_at')
    op.drop_column('sys_user_role', 'created_at')
    op.alter_column('sys_user', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('sys_user', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_user', 'remark',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_user', 'phone',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_user', 'theme',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'light'::text"))
    op.alter_column('sys_user', 'lang',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'en-US'::text"))
    op.alter_column('sys_user', 'password',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('sys_user', 'nickname',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_user', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('sys_user', 'email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_user', 'avatar',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_role', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('sys_role', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_role', 'remark',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_role', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_role', 'value',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('sys_role', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.add_column('sys_menu_role', sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
    op.add_column('sys_menu_role', sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True))
    op.drop_column('sys_menu_role', 'updated_at')
    op.drop_column('sys_menu_role', 'created_at')
    op.alter_column('sys_menu', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('sys_menu', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_menu', 'permission',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'path_file',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'path',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'icon',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'remark',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_menu', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('sys_loginlog', 'browser',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_loginlog', 'system',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_loginlog', 'login_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_loginlog', 'address',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_loginlog', 'ip',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_loginlog', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('sys_dictionary_entry', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('sys_dictionary_entry', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_dictionary_entry', 'remark',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_dictionary_entry', 'value',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('sys_dictionary_entry', 'key',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('sys_dictionary', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('sys_dictionary', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_dictionary', 'remark',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_dictionary', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_dictionary', 'code',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('sys_dictionary', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'sys_department', type_='foreignkey')
    op.create_foreign_key('sys_department_parent_department_id_fkey', 'sys_department', 'sys_department', ['parent_department_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
    op.alter_column('sys_department', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('sys_department', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sys_department', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sys_department', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('profile_link_category', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('profile_link_category', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('profile_link', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('profile_link', 'url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('profile_link', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'news_category', type_='unique')
    op.create_index('news_category_name_key', 'news_category', ['name'], unique=True)
    op.alter_column('news_category', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('news_category', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'news', type_='foreignkey')
    op.create_foreign_key('news_news_id_fkey', 'news', 'news_category', ['news_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.alter_column('news', 'publishedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False)
    op.alter_column('news', 'source',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('news', 'author',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('news', 'content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('news', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('mail', 'text',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'html',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'subject',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'to',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'from',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'pass',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'user',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'host',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mail', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('feed_back', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('feed_back', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('feed_back', 'url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('feed_back', 'content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('change_log', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=True)
    op.alter_column('change_log', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('change_log', 'url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('change_log', 'content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('change_log', 'publish_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False)
    op.alter_column('change_log', 'publish_version',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('change_log', 'publish_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'blog_tag', type_='unique')
    op.create_index('blog_tag_name_key', 'blog_tag', ['name'], unique=True)
    op.alter_column('blog_tag', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('blog_tag', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'blog_category', type_='unique')
    op.create_index('blog_category_name_key', 'blog_category', ['name'], unique=True)
    op.alter_column('blog_category', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('blog_category', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'blog', type_='foreignkey')
    op.drop_constraint(None, 'blog', type_='foreignkey')
    op.create_foreign_key('blog_category_id_fkey', 'blog', 'blog_category', ['category_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key('blog_tag_id_fkey', 'blog', 'blog_tag', ['tag_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.alter_column('blog', 'publishedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False)
    op.alter_column('blog', 'source',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('blog', 'author',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('blog', 'content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('blog', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_table('sys_config')
    # ### end Alembic commands ###
